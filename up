#!/bin/sh
set -eu

cd $(dirname $0)

# Create a combined .env file
touch .env
rm .env
cat default.env >> .env
# Ensure there is a trailing new line before appending the next chunk
# Avoid `sed -i -e '$a\'` because of compat with BSD sed (macOS).
# `sed -i '' -e '$a\'` could work there, but that doesn't work on GNU sed.
# Just use echo instead. We always re-create the target, so appending
# unconditionally won't cause indefinite growth.
# https://github.com/addshore/mediawiki-docker-dev/issues/18
echo >> .env
touch local.env
cat local.env >> .env
echo >> .env

# Switch -dev for php vs hhvm (as there is no -dev) for hhvm
if grep -q PHPORHHVM=hhvm .env; then
   echo "DOCKERPHPDEV=" >> .env
else
   echo "DOCKERPHPDEV=-dev" >> .env
fi

# Start Containers
echo "Containers are starting"
docker-compose up -d

# Update composer
echo "Running composer install on the web container"
# Permission for mw-path volume (composer update writes to composer.lock)
docker-compose exec "web" chown application:application //var/www/mediawiki
# Permission for mw-vendor volume
docker-compose exec "web" chown application:application //var/www/mediawiki/vendor
# Permission for composer-cache volume
docker-compose exec "web" chown application:application //cache/composer
docker-compose exec --user application "web" composer update --working-dir //var/www/mediawiki

echo "Waiting for the db server to finish starting"
docker-compose exec "web" //srv/wait-for-it.sh db:3306

echo "Adding services to hosts file"
./addhost proxy.mw.localhost
./addhost phpmyadmin.mw.localhost
./addhost graphite.mw.localhost

echo "Setting up log directory"
docker-compose exec "web" mkdir //var/log/mediawiki
docker-compose exec "web" chown application:application //var/log/mediawiki

echo "Setting up images directory"
docker-compose exec "web" chown application:application //var/www/mediawiki/images/docker

# Add the default site
./addsite default

# Done
echo "Your development environment is running"
